!function(h){function r(t){var e=f(t);if(void 0!==e)return e.split("-").pop()}function f(t){var e=h(t).attr("class");if(void 0!==e)return e.split(" ").find(function(t){return t.match(/level-/)})}var p=sortables_admin.options,t=(sortables_admin.l10n,{update:function(t,e){var n,i,r,o,s,a,l,c=h("#the-list").closest("table"),u=f(e.item),d=void 0!==u?"#the-list tr."+u:"#the-list tr";if(c.hasClass("tags"))o=function(t){return{meta:{menu_order:t}}},s=function(t){return t.meta.menu_order};else{if(!c.hasClass("posts")&&!c.hasClass("pages"))return;o=function(t){return{menu_order:t}},s=function(t){return t.menu_order}}n=h('[name="paged"]').val()-1,i=h("#edit_"+p.object_type+"_per_page").val(),r=n*i,a=[],h(d).each(function(t,e){var n=h(e).find('.check-column [type="checkbox"]').val();++r!=parseInt(h(e).find(".sort-handle").text())&&a.push({path:wpApiSettings.versionString+p.rest_base+"/"+n,data:o(r),method:"POST"})}),console.log(a),(l=function(){if(a.length){var t=a.shift();console.log(t),wp.apiRequest(t).done(function(t,e,n){h('[id$="-'+t.id+'"] .sort-handle').text(s(t)),l()})}})(a)},handle:".sort-handle",start:function(t,e){var n=[],i=h(e.placeholder).next(),r=f(e.item);if(void 0!==r){for(h(e.placeholder).siblings(":not()");i.length&&!i.hasClass(r);)n.push(i),i=i.next("tr");h(e.item).data("children",n)}},stop:function(t,n){h(h(n.item).data("children")).each(function(t,e){e.insertAfter(n.item)})}});h(document).ready(function(){h("#the-list").sortable(t)}),h(document).on("mouseover","#the-list .sort-handle",function(t){var e,n=r(h(t.target).closest("tr")[0]),i=!0;e=void 0!==n?h("#the-list").children(".level-"+n).filter(function(t){return ret=i,t&&i&&r(h(this).prev())<n&&(i=!1),ret}):h("#the-list").children(),h("#the-list").sortable("option","items",e)})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLmpzIl0sIm5hbWVzIjpbIiQiLCJnZXRMZXZlbCIsImVsIiwiY2xzIiwiZ2V0TGV2ZWxDbGFzcyIsInNwbGl0IiwicG9wIiwiYXR0ciIsImZpbmQiLCJ2IiwibWF0Y2giLCJvcHQiLCJzb3J0YWJsZXNfYWRtaW4iLCJvcHRpb25zIiwic29ydGFibGUiLCJsMTBuIiwidXBkYXRlIiwiZXZlbnQiLCJ1aSIsImN1cnJlbnRfcGFnZSIsInBlcl9wYWdlIiwiY291bnRlciIsImdldF9kYXRhIiwiZ2V0X29yZGVyIiwicmVxdWVzdHMiLCJiYXRjaCIsIiR0YWJsZSIsImNsb3Nlc3QiLCJsZXZlbF9jbGFzcyIsIml0ZW0iLCJpdGVtX3NlbGVjdG9yIiwiaGFzQ2xhc3MiLCJtZXRhIiwibWVudV9vcmRlciIsIm9iamVjdCIsInZhbCIsIm9iamVjdF90eXBlIiwiZWFjaCIsImkiLCJvYmpfaWQiLCJwYXJzZUludCIsInRleHQiLCJwdXNoIiwicGF0aCIsIndwQXBpU2V0dGluZ3MiLCJ2ZXJzaW9uU3RyaW5nIiwicmVzdF9iYXNlIiwiZGF0YSIsIm1ldGhvZCIsImNvbnNvbGUiLCJsb2ciLCJsZW5ndGgiLCJzaGlmdCIsIndwIiwiYXBpUmVxdWVzdCIsImRvbmUiLCJyZXNwb25zZSIsInN0YXR1cyIsInhociIsImlkIiwiaGFuZGxlIiwic3RhcnQiLCJjaGlsZHJlbiIsIiRuZXh0IiwicGxhY2Vob2xkZXIiLCJuZXh0IiwibGV2ZWxDbGFzcyIsInNpYmxpbmdzIiwic3RvcCIsIiRlbCIsImluc2VydEFmdGVyIiwiZG9jdW1lbnQiLCJyZWFkeSIsIm9uIiwiZSIsIiRpdGVtcyIsImxldmVsIiwidGFyZ2V0IiwiaW5jbHVkZSIsImZpbHRlciIsImlkeCIsInJldCIsInRoaXMiLCJwcmV2IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFVQSxHQUdULFNBQVNDLEVBQVVDLEdBQ2xCLElBQUlDLEVBQU1DLEVBQWVGLEdBQ3pCLFFBQUssSUFBdUJDLEVBRzVC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QU8sU0FBVUMsR0FFakIsT0FEQUMsSUFBTUgsRUFDQUUsR0FJREYsR0FBVzdFLEVBQVVELEVBQUVrRixNQUFNQyxRQUFXUCxJQUM1Q0UsR0FBVSxHQUVKRyxNQUdBakYsRUFBRyxhQUFjOEQsV0FHM0I5RCxFQUFHLGFBQWNjLFNBQVUsU0FBVSxRQUFTNkQsS0FsSmhELENBb0pHUyIsImZpbGUiOiJhZG1pbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCl7XG5cblxuXHRmdW5jdGlvbiBnZXRMZXZlbCggZWwgKSB7XG5cdFx0dmFyIGNscyA9IGdldExldmVsQ2xhc3MoIGVsICk7XG5cdFx0aWYgKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIGNscyApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0cmV0dXJuIGNscy5zcGxpdCgnLScpLnBvcCgpO1xuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0TGV2ZWxDbGFzcyhlbCkge1xuXHRcdHZhciBjbHMgPSAkKGVsKS5hdHRyKCdjbGFzcycpO1xuXG5cdFx0aWYgKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIGNscyApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0cmV0dXJuIGNscy5zcGxpdCgnICcpIC8vIGFycmF5XG5cdFx0XHQuZmluZCggZnVuY3Rpb24odil7IHJldHVybiB2Lm1hdGNoKC9sZXZlbC0vKSB9ICk7XG5cdH1cblxuXG5cblx0dmFyIG9wdCA9IHNvcnRhYmxlc19hZG1pbi5vcHRpb25zLFxuXHRcdGwxMG4gPSBzb3J0YWJsZXNfYWRtaW4ubDEwbixcblx0XHRzb3J0YWJsZSA9IHtcblx0XHRcdHVwZGF0ZTogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHtcblx0XHRcdFx0dmFyICR0YWJsZSA9ICQoJyN0aGUtbGlzdCcpLmNsb3Nlc3QoJ3RhYmxlJyksXG5cdFx0XHRcdFx0Y3VycmVudF9wYWdlLCBwZXJfcGFnZSwgY291bnRlcixcblx0XHRcdFx0XHRnZXRfZGF0YSwgZ2V0X29yZGVyLFxuXHRcdFx0XHRcdHJlcXVlc3RzLCBiYXRjaCxcblx0XHRcdFx0XHRsZXZlbF9jbGFzcyA9IGdldExldmVsQ2xhc3MoIHVpLml0ZW0gKSxcblx0XHRcdFx0XHRpdGVtX3NlbGVjdG9yID0gJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBsZXZlbF9jbGFzcyA/ICcjdGhlLWxpc3QgdHIuJyArIGxldmVsX2NsYXNzIDogJyN0aGUtbGlzdCB0cic7XG5cblx0XHRcdFx0aWYgKCAkdGFibGUuaGFzQ2xhc3MoJ3RhZ3MnKSApIHtcblx0XHRcdFx0XHRnZXRfZGF0YSA9IGZ1bmN0aW9uKGNvdW50ZXIpIHtcblx0XHRcdFx0XHRcdHJldHVybiB7IG1ldGE6IHsgbWVudV9vcmRlcjogY291bnRlciB9IH07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGdldF9vcmRlciA9IGZ1bmN0aW9uKCBvYmplY3QgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gb2JqZWN0Lm1ldGEubWVudV9vcmRlcjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSBpZiAoICR0YWJsZS5oYXNDbGFzcygncG9zdHMnKSB8fCAkdGFibGUuaGFzQ2xhc3MoJ3BhZ2VzJykgKSB7XG5cdFx0XHRcdFx0Z2V0X2RhdGEgPSBmdW5jdGlvbihjb3VudGVyKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4geyBtZW51X29yZGVyOiBjb3VudGVyIH07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGdldF9vcmRlciA9IGZ1bmN0aW9uKCBvYmplY3QgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gb2JqZWN0Lm1lbnVfb3JkZXI7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGN1cnJlbnRfcGFnZSA9ICQoJ1tuYW1lPVwicGFnZWRcIl0nKS52YWwoKSAtIDE7XG5cdFx0XHRcdHBlcl9wYWdlID0gJCgnI2VkaXRfJytvcHQub2JqZWN0X3R5cGUrJ19wZXJfcGFnZScpLnZhbCgpO1xuXHRcdFx0XHRjb3VudGVyID0gY3VycmVudF9wYWdlICogcGVyX3BhZ2U7XG5cdFx0XHRcdHJlcXVlc3RzID0gW107XG5cblx0XHRcdFx0JCggaXRlbV9zZWxlY3RvciApLmVhY2goZnVuY3Rpb24oIGksIGVsICl7XG5cdFx0XHRcdFx0dmFyIG9ial9pZCA9ICQoZWwpLmZpbmQoJy5jaGVjay1jb2x1bW4gW3R5cGU9XCJjaGVja2JveFwiXScpLnZhbCgpO1xuXHRcdFx0XHRcdGNvdW50ZXIrKztcblxuXHRcdFx0XHRcdC8vIG9ubHkgc2F2ZSBjaGFuZ2VkIHBvc3RzXG5cdFx0XHRcdFx0aWYgKCBjb3VudGVyID09IHBhcnNlSW50KCAkKGVsKS5maW5kKCcuc29ydC1oYW5kbGUnKS50ZXh0KCkgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmVxdWVzdHMucHVzaCh7XG5cdFx0XHRcdFx0XHRwYXRoOiB3cEFwaVNldHRpbmdzLnZlcnNpb25TdHJpbmcgKyBvcHQucmVzdF9iYXNlICsgJy8nICsgb2JqX2lkLFxuXHRcdFx0XHRcdFx0ZGF0YTogZ2V0X2RhdGEoIGNvdW50ZXIgKSxcblx0XHRcdFx0XHRcdG1ldGhvZDonUE9TVCcsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRjb25zb2xlLmxvZyhyZXF1ZXN0cyk7XG5cdFx0XHRcdGJhdGNoID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCAhIHJlcXVlc3RzLmxlbmd0aCApIHtcblx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0dmFyIGRhdGEgPSByZXF1ZXN0cy5zaGlmdCgpO1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpXG5cdFx0XHRcdFx0d3AuYXBpUmVxdWVzdCggZGF0YSApLmRvbmUoZnVuY3Rpb24ocmVzcG9uc2UsIHN0YXR1cywgeGhyICl7XG5cblx0XHRcdFx0XHRcdCQoJ1tpZCQ9XCItJytyZXNwb25zZS5pZCsnXCJdIC5zb3J0LWhhbmRsZScpLnRleHQoIGdldF9vcmRlciggcmVzcG9uc2UgKSApO1xuXHRcdFx0XHRcdFx0YmF0Y2goKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHRiYXRjaChyZXF1ZXN0cyk7XG5cblx0XHRcdH0sXG5cdFx0XHRoYW5kbGU6ICcuc29ydC1oYW5kbGUnLFxuXHRcdFx0c3RhcnQ6ZnVuY3Rpb24oIGV2ZW50LCB1aSApIHtcblx0XHRcdFx0Ly8gZGVjbGFyZSBjaGlsZHJlblxuXHRcdFx0XHR2YXIgY2hpbGRyZW4gPSBbXSxcblx0XHRcdFx0XHQkbmV4dCA9ICQodWkucGxhY2Vob2xkZXIpLm5leHQoKSxcblx0XHRcdFx0XHRsZXZlbENsYXNzID0gZ2V0TGV2ZWxDbGFzcyggdWkuaXRlbSApLCAvLyBzdHJcblx0XHRcdFx0XHRsZXZlbDsgLy8gZmFzdGVyIVxuXG5cdFx0XHRcdGlmICggJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiBsZXZlbENsYXNzICkge1xuXHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0fVxuLy9cdFx0XHRcdGlmICggZ2V0TGV2ZWwoIHVpLml0ZW0gKSApXG5cblx0XHRcdFx0JCh1aS5wbGFjZWhvbGRlcikuc2libGluZ3MoJzpub3QoKScpXG5cblx0XHRcdFx0d2hpbGUgKCAkbmV4dC5sZW5ndGggJiYgISAkbmV4dC5oYXNDbGFzcyggbGV2ZWxDbGFzcyApICkge1xuXHRcdFx0XHRcdGNoaWxkcmVuLnB1c2goICRuZXh0ICk7XG5cdFx0XHRcdFx0JG5leHQgPSAkbmV4dC5uZXh0KCd0cicpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdCQoIHVpLml0ZW0gKS5kYXRhKCAnY2hpbGRyZW4nLCBjaGlsZHJlbiApO1xuXHRcdFx0fSxcblx0XHRcdHN0b3A6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7XG5cblx0XHRcdFx0JCggJCh1aS5pdGVtKS5kYXRhKCdjaGlsZHJlbicpICkuZWFjaChmdW5jdGlvbihpLCRlbCl7XG5cdFx0XHRcdFx0JGVsLmluc2VydEFmdGVyKHVpLml0ZW0pO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0fVxuXHRcdH07XG5cblx0JChkb2N1bWVudCkucmVhZHkoIGZ1bmN0aW9uKCkge1xuXHRcdC8vJCgnI3RoZS1saXN0Jykuc29ydGFibGUoc29ydGFibGUpO1xuXHRcdCQoJyN0aGUtbGlzdCcpLnNvcnRhYmxlKCBzb3J0YWJsZSApO1xuXHR9KTtcblx0Ly9cblx0JChkb2N1bWVudCkub24oJ21vdXNlb3ZlcicsJyN0aGUtbGlzdCAuc29ydC1oYW5kbGUnLGZ1bmN0aW9uKGUpe1xuXHRcdHZhciBsZXZlbCA9IGdldExldmVsKCAkKCBlLnRhcmdldCApLmNsb3Nlc3QoJ3RyJylbMF0gKSxcblx0XHRcdGluY2x1ZGUgPSB0cnVlLFxuXHRcdFx0JGl0ZW1zLFxuXHRcdFx0aGFzX2xldmVscyA9ICd1bmRlZmluZWQnICE9PSB0eXBlb2YgbGV2ZWw7XG5cblx0XHRpZiAoIGhhc19sZXZlbHMgKSB7IC8vIGhhcyBsZXZlbHNcblx0XHRcdCRpdGVtcyA9ICQoICcjdGhlLWxpc3QnICkuY2hpbGRyZW4oICcubGV2ZWwtJyArIGxldmVsIClcblx0XHRcdFx0LmZpbHRlcihmdW5jdGlvbiggaWR4ICl7XG5cdFx0XHRcdFx0cmV0ID0gaW5jbHVkZTtcblx0XHRcdFx0XHRpZiAoICFpZHggKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmICggaW5jbHVkZSAmJiBnZXRMZXZlbCggJCh0aGlzKS5wcmV2KCkgKSA8IGxldmVsICkge1xuXHRcdFx0XHRcdFx0aW5jbHVkZSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0XHR9KTsgLy8gc2FtZSBsZXZlbFxuXHRcdH0gZWxzZSB7XG5cdFx0XHQkaXRlbXMgPSAkKCAnI3RoZS1saXN0JyApLmNoaWxkcmVuKCk7XG5cdFx0fVxuXHRcdC8vY29uc29sZS5sb2coJGl0ZW1zKTtcblx0XHQkKCAnI3RoZS1saXN0JyApLnNvcnRhYmxlKCAnb3B0aW9uJywgJ2l0ZW1zJywgJGl0ZW1zICk7XG5cdH0pO1xufSkoalF1ZXJ5KVxuIl19
